
schema:
  schema_id: tiger
  name: 虎（纯虎 虎句优化）
  dependencies:
    - melt_eng        # 英文输入，作为次翻译器挂载到拼音方案
    - common
    
switches:
  - name: ascii_mode
    states: [ 中, 英 ]
  - name: chaifen
    states: [ 隐, 拆显 ]   
  - name: charset_filter
    states: [ 小, 大字集 ]
    reset: 0
  - name: pinyin  #拼音滤镜
    reset: 0
    states: [ 关, 字pīn ]
  - name: ascii_punct  # 中英标点
    states: [ 。, . ]
  - name: tiger-sentence
    states: [关, 虎句]
    reset: 1   
  - name: tigress
    states: [ 关, 虎词 ]
    reset: 1   
  - name: tiger
    states: [ 关, 虎单 ]
    reset: 1   
  - name: simple
    states: [ 两码句, 原码句 ]
  - name: super_tips
    states: [ off, tips ]
    reset: 1
  - name: full_shape
    states: [ 半角, 全角 ]
    reset: 0   
  - name: traditionalization
    states: [ 简, 繁 ]
  - name: emoji
    states: [ 💀, 😄 ]
    reset: 0
  - name: udpf_switch
    states: [ 关, U编]
  - name: chinese_english
    states: [ 关, 翻译 ]
  - name: prediction
    states: [ 关, 预测 ]


# 输入引擎
engine:
  processors:
    - predictor
    #- lua_processor@*select_character          # 以词定字，有了辅助码了，想开启可以注释掉
    - lua_processor@*cold_word_drop.processor
    - lua_processor@*quick_symbol_text    #快符引导以及重复上屏
   # - lua_processor@*super_tips          #超级提示模块 PC版本（如果要启用PC版本需要注释掉手机版本）：表情、简码、翻译、化学式、等等靠你想象
    - lua_processor@*super_tips_phone*S   #超级提示模块 手机版本processors部分
    - lua_processor@*userdb_sync_delete   #通过输入 /del 触发,用于清理自定义同步目录下txt用户词典里被标记c<0的词条
    - ascii_composer
    - recognizer
    - key_binder
    - lua_processor@*key_binder # 绑定按键扩展能力
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@radical_lookup  # 部件拆字自定义 tag
    - affix_segmentor@reverse_stroke  #笔画反查
    - affix_segmentor@add_user_dict
    - punct_segmentor
    - fallback_segmentor
  translators:
    - table_translator@custom_phrase     # 自定义短语 custom_phrase.txt
    - table_translator@tiger_sentence
    - predict_translator
    - punct_translator
    - script_translator
    - lua_translator@*shijian            # 时间、日期、星期、农历、节气、时辰等等
    - lua_translator@*unicode            # Unicode
    - lua_translator@*number_translator  # 数字、金额大写
    - lua_translator@*calculator         # 计算器
    - table_translator@melt_eng          # 英文输入
    - table_translator@cn_en             # 中英混合词汇
    - table_translator@chengyu           # 简码成语
    - table_translator@radical_lookup    # 部件拆字反查
    - table_translator@reverse_stroke    #笔画反查
    - script_translator@user_dict_set
    - script_translator@add_user_dict
    - lua_translator@*force_gc          # 暴力 GC 降低内存
  filters:
    - lua_filter@*common_filter                      #字符集过滤
    - lua_filter@*cold_word_drop.filter
    - lua_filter@*remove_tiger_filter             # 虎码开关
    - lua_filter@*super_tips_phone*M     #超级提示模块 手机版本filters部分
    - lua_filter@*autocap_filter                    # 英文自动大写
    - reverse_lookup_filter@radical_reverse_lookup  # 部件拆字滤镜，放在pro_comment_format前面，进一步被超级注释处理以获得拼音编码+辅助码的提示
    - lua_filter@*super_preedit                     #输入码显示全拼并带上音调
    - simplifier@emoji                              # Emoji
    - simplifier@traditionalize                     # 简繁切换
    - simplifier@mars                               #火星文
    - simplifier@chinese_english                    #中英翻译
    - lua_filter@*search@radical_pinyin             # 部件拆字辅码放在简繁转换之后
    - simplifier@chaifen #拆分滤镜
    - simplifier@pinyin #拼音滤镜 
  #  - lua_filter@*super_comment                     #超级注释模块，支持错词提示、辅助码显示，部件组字读音注释，支持个性化配置和关闭相应的功能，详情搜索super_comment进行详细配置
    - lua_filter@*unicode_display #Unicode编码显示
    #- simplifier@moqi_chaifen                       #墨奇拆分型辅助码查询，放在超级注释后面
    #- simplifier@zrm_chaifen                        #自然码拆分型辅助码查询，放在超级注释后面
    - uniquifier                                    # 去重
    
predictor:
  db: wanxiang-lts-zh-predict.db
# 每次最大预测候选数
# 默认为 0，表示显示所有候选数
# 您可以将其设置为与 page_size 相同，这样 period 就不会触发下一页
  max_candidates: 5
# 最大连续预测次数
# 默认为 0，表示无限制
  max_iterations: 1
#shijian:仅仅作为提示使用，编码已经写死，引导适应性更高，如有需求lua中修改
#时间：osj 或者 /sj
#日期：orq 或者 /rq
#农历：onl 或者 /nl
#星期：oxq 或者 /xq
#今年第几周：oww 或者 /ww
#节气：ojq 或者 /jq
#日期+时间：ors 或者 /rs
#时间戳：ott 或者 /tt
#大写N日期：N20250315
#节日：ojr 或者 /jr
#问候模板：/day 或者 oday

#快符lua，lua中有预设，26个字母、10个数字，你可以在这里配置替换默认的值，键可以是一个或多个，值可以是任意字符这里不齐全默认配置将生效
quick_symbol_text:
  q: "欢迎使用万象拼音"
  w: "噢我的天哪！"
  e: "（"
  r: "）"
  t: "~"
  y: "·"
  u: "『"
  i: "』"
  o: "〖"
  p: "〗"
  a: "！"
  s: "……"
  d: "、"
  f: "“"
  g: "”"
  h: "‘"
  j: "’"
  k: "【"
  l: "】"
  z: "。”"
  x: "？”"
  c: "！”"
  v: "——"
  b: "%"
  n: "《"
  m: "》"
  "1": "①"
  "2": "②"
  "3": "③"
  "4": "④"
  "5": "⑤"
  "6": "⑥"
  "7": "⑦"
  "8": "⑧"
  "9": "⑨"
  "0": "⓪"

# Lua 配置：计算器触发关键字
calculator:
  trigger: "V" 

# 次翻译器，英文
melt_eng:
  dictionary: melt_eng     # 挂载词库 melt_eng.dict.yaml
  enable_sentence: false   # 禁止造句
  enable_user_dict: false  # 禁用用户词典，是否开启自动调频
  initial_quality: 1.1     # 初始权重
  comment_format:          # 自定义提示码
    - xform/.*//           # 清空提示码


# 中英混合词汇
cn_en:
  dictionary: ""
  user_dict: en_dicts/pinyin   
  db_class: stabledb
  enable_completion: true
  enable_sentence: false
  initial_quality: 0.5
  comment_format:
    - xform/^.+$//

#中文转英文
chinese_english:
  option_name: chinese_english
  opencc_config: chinese_english.json
  tips: char
  comment_format:
    - "xform/-/ /"
    
# 简繁切换
traditionalize:
  option_name: traditionalization
  opencc_config: s2t.json  # s2t.json | s2hk.json | s2tw.json | s2twp.json
  tips: none               # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。
  tags: [ abc, number, gregorian_to_lunar ]  # 限制在对应 tag，不对其他如反查的内容做简繁转换
  
punctuator:
  digit_separators: ":,."  #数字分隔符
 # __include: symbols:/symbol_table         # 从 symbols.yaml 导入配置
 
#从 default 继承快捷键
key_binder:
  import_preset: default  # 从 default.yaml 继承通用的
  # Lua 配置: 超级tips上屏按键
  tips_key: "slash"   #修改时候去default找
  search: "`"             # 辅码引导符，要添加到 speller/alphabet
  bindings:             # 也可以再增加方案专有的
    #- { when: composing, accept: Tab, send: '[' } ## 取消注释后：tab引导辅助码
    - { when: composing, accept: Control+w, send: Control+BackSpace }
#分号用于次选
    - { when: has_menu, accept: semicolon, send: 2 }
#使用Control+e进入翻译模式
    - { when: has_menu, accept: "Control+e", toggle: chinese_english }
#通过快捷键Control+t开启超级tips
    - { when: has_menu, accept: "Control+t", toggle: super_tips }
#通过快捷键Control+g开启字符集过滤
    - { when: has_menu, accept: "Control+g", toggle: charset_filter }
# 使用 tab 在不同音节之间跳转
    - { when: has_menu, accept: "Tab", send: "Control+Right" }
    - { when: composing, accept: "Tab", send: "Control+Right" }
#通过super_tips.lua显示到提示框里，用来上屏带/的简码、表情、化学式等等。四码时候前面有词，想要上屏单字也是用/，最好是用句号，这样可以与手机上可以做同样的定义，保持同样的习惯
    - { match: "[a-z]{1,4}", accept: "/",  send_sequence: "/1" } 

#通过快捷键Control+m显示拆分
    - { when: has_menu, accept: "Control+m", toggle: chaifen }
#通过快捷键Control+z开关虎单
    - { when: has_menu, accept: "Control+z", toggle: tiger }
#使用快捷键Control+a开关虎词
    - { when: has_menu, accept: "Control+a", toggle: tigress }
#通过快捷键Control+s开关虎句
    - { when: has_menu, accept: "Control+s", toggle: tiger-sentence }


# Emoji
emoji:
  option_name: emoji
  opencc_config: emoji.json
  inherit_comment: false  # 在 corrector.lua 及反查中，emoji 返回空注释
  

speller:

  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA[/|
  # initials 定义仅作为始码的按键，排除 ` 让单个的 ` 可以直接上屏
  initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA
  # 第一位<空格>是拼音之间的分隔符；第二位<'>表示可以手动输入单引号来分割拼音。
  delimiter: " '"
  ## speller 未允许 aj 表示 an
  algebra:
    - derive/^(\w)(\w),(.+)$/$1$2/ # 纯双拼的情况
    - derive/^(\w)(\w),(\w)(\w);(\w)(\w),(.+)$/$5$6/ # 纯双拼的情况

    - derive/^(\w)(\w),(\w)(.+)$/$1$2$3/ # 双拼+一位辅助码的情况
    - derive/^(\w)(\w),(\w)(\w);(\w)(\w),(\w)(.+)$/$5$6$7/ # 双拼+一位辅助码的情况

    - derive|^(\w)(\w),(\w)(\w)$|$1$2$3$4/| # 双拼+2位辅助码的情况 结尾加/
    - derive|^(\w)(\w),(\w)(\w);(.+)$|$1$2$3$4/| # 双拼+2位辅助码的情况 结尾加/
    - derive|^(\w)(\w),(\w)(\w);(\w)(\w),(\w)(\w)$|$5$6$7$8/| # 双拼+2位辅助码的情况 结尾加/
   
    - derive|^(\w)(\w),(\w)0.+$|$1$2$3/| # 3码全码的字，3码全码后加/
    - derive|^(\w)(\w),00.+$|$1$2/| # 1码全码的字，3码全码后加/
    - derive|^(\w)0,00.+$|$1/| # 1码全码的字，3码全码后加/

    - derive|^.+;(\w)(\w),(\w)0$|$1$2$3/| # 3码全码的字，3码全码后加/
    - derive|^.+;(\w)(\w),00$|$1$2/| # 1码全码的字，3码全码后加/
    - derive|^.+;(\w)0,00$|$1/| # 1码全码的字，3码全码后加/
   

translator:
  dictionary: tiger.extended
  enable_user_dict: false # 是否开启自动调频

__include: octagram   #启用语言模型
#语言模型
octagram:
  __patch:
    grammar:
      language: wanxiang-lts-zh-hans
      collocation_max_length: 8         #命中的最长词组
      collocation_min_length: 2         #命中的最短词组，搭配词频健全的词库时候应当最小值设为3避开2字高频词
      collocation_penalty: -10          #默认-12 对常见搭配词组施加的惩罚值。较高的负值会降低这些搭配被选中的概率，防止过于频繁地出现某些固定搭配。
      non_collocation_penalty: -12      #默认-12 对非搭配词组施加的惩罚值。较高的负值会降低非搭配词组被选中的概率，避免不合逻辑或不常见的词组组合。
      weak_collocation_penalty: -24     #默认-24 对弱搭配词组施加的惩罚值。保持默认值通常是为了有效过滤掉不太常见但仍然合理的词组组合。
      rear_penalty: -30                 #默认-18 对词组中后续词语的位置施加的惩罚值。较高的负值会降低某些词语在句子后部出现的概率，防止句子结构不自然。
    translator/contextual_suggestions: false
    translator/max_homophones: 5
    translator/max_homographs: 5
    

# 拆分滤镜
chaifen:
  opencc_config: hu_cf.json
  option_name: chaifen
  show_in_comment: true 
  comment_format:     
    - "xform/&nbsp;/ /"
  tags:     
    - abc
    - tiger
    - reverse_lookup
  tips: all #如只想给单字加滤镜，可改为 char


# ↓拼音滤镜
pinyin:
  opencc_config: pinyin.json
  option_name: pinyin
  show_in_comment: true #作为注解在后面显示
  comment_format:
    - 'xform/&nbsp;/ /'
    # - "xform/^/ /"
  tips: char
  tags:
    - abc
    - tiger
    - reverse_lookup
    

custom_phrase:
  dictionary: ""
  user_dict: custom_phrase/tiger  
  db_class: stabledb
  enable_completion: false # 补全提示
  enable_sentence: true   
  initial_quality: 99      
